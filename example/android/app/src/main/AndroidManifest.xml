<manifest xmlns:android="http://schemas.android.com/apk/res/android"
  xmlns:tools="http://schemas.android.com/tools"
  package="com.example.example">

  <!-- io.flutter.app.FlutterApplication is an android.app.Application that
       calls FlutterMain.startInitialization(this); in its onCreate method.
       In most cases you can leave this as-is, but you if you want to provide
       additional functionality it is fine to subclass or reimplement
       FlutterApplication and put your custom class here. -->

  <uses-permission android:name="android.permission.CAMERA" />
  <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
  <uses-permission android:name="android.permission.INTERNET" />

  <application
    android:name="${applicationName}"
    android:appComponentFactory="bruno"
    android:icon="@mipmap/ic_launcher"
    android:label="Bruno"
    tools:replace="android:appComponentFactory, android:label">
    <activity
      android:name=".MainActivity"
      android:configChanges="orientation|keyboardHidden|keyboard|screenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
      android:exported="true"
      android:hardwareAccelerated="true"
      android:launchMode="singleTop"
      android:theme="@style/LaunchTheme"
      android:windowSoftInputMode="adjustResize">
      <!-- This keeps the window background of the activity showing
           until Flutter renders its first frame. It can be removed if
           there is no splash screen (such as the default splash screen
           defined in @style/LaunchTheme). -->
      <intent-filter>
        <action android:name="android.intent.action.MAIN" />
        <category android:name="android.intent.category.LAUNCHER" />
      </intent-filter>

      <meta-data
        android:name="io.flutter.embedding.android.NormalTheme"
        android:resource="@style/NormalTheme" />

    </activity>

    <meta-data
      android:name="flutterEmbedding"
      android:value="2" />
  </application>
</manifest>
